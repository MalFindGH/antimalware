$ErrorActionPreference = "SilentlyContinue"

$detectionAmount = 0
$trusted = 0

$hashes = @{
    "19a14c6615a5a8fb0834b22a603d0f4f" = "Trojan.Ppatre.Gen.1"
    "b7a25f13272e6ed6fd73bcd0b7d6c984" = "Trojan.Ppatre.Gen.1"
    "2670b855002487e19a2b902b7ccf0c60" = "Application.Agent.LCT"
    "257dbd2c9b13711db906a66a670ccbf0" = "Gen:Variant.Zusy.298869"
    "67f6f94857248822530ea006433f5a73" = "Gen:Variant.Zusy.298869"
    "f156207112d65239b2c79cb3a1237217" = "Gen:Variant.Zusy.298869"
    "ab099929a7985578729bdcbc8c920b12" = "Gen:Variant.Zusy.298869"
    "af750c84a901eddc9bf92ef82d1f5429" = "Gen:Variant.Zusy.298869"
    "269bde3dd12fb5f965f8b39d81175bca" = "Win32.Virlock.Gen.4"
    "1c7b42c210859907ff63e7fb40b801f5" = "Gen:Variant.Razy.542083"
    "30fee4bb31e7c0806d2a6f6c0d8af56d" = "Gen:Variant.Razy.542083"
    "41f5ec759fd144add13727edd8257aab" = "Gen:Variant.Razy.542083"
    "1e2ad78f600b51e8740587879a03b44e" = "Trojan.Agent.BALW"
    "79c999e306e1dc08a9f7d1fa181a4bb1" = "Trojan.Agent.BALW"
    "0f4c7e225bd2ae4381bcfbcb02488f27" = "Trojan.Agent.BALW"
    "186a5d37ca1ad900e9eee4e639723ee8" = "Trojan.GenericKD.66133765"
    "1d8e3025669b99d3abb03cc1bba3a17b" = "Trojan.GenericKD.45887308"
    "1792b2757710ba620051eb7c1262524f" = "MemScan:Trojan.Agent.BALW"
    "2706eb8048fced12f066f9b5f7971936" = "MemScan:Trojan.Agent.BALW"
    "a99699bebd282f8536cdbabe988f1d7e" = "MemScan:Trojan.Agent.BALW"
    "14be3f1befad3846443adfa5d1354b12" = "MemScan:Trojan.Agent.BALW"
    "0c4374d72e166f15acdfe44e9398d026" = "Gen:Variant.Zusy.312680"
    "bf340b3ff326cede17c688bc4092a27b" = "Trojan.Delf.FareIt.Gen.EGW@cW6Rg1li"
    "d29866c8612fcda8e4f9d684d70dd8bb" = "Dropped:Trojan.AgentWDCR.PZW"
    "11cf5ca49a6c354eb005fb24bdf6b1f0" = "Gen:Heur.PonyStealer.Wm0@eiPsjvoO"
    "b211348f8784ea450e1364c053046a6c" = "Gen:Heur.PonyStealer.Wm0@ey523zkO"
    "6f45b6d8859fed56f8ee49918f5fe4ee" = "Gen:Heur.PonyStealer.Wm0@e8TOgepO"
    "952c76882b8dd74b5d2fe4e8154d9ee5" = "Gen:Heur.PonyStealer.Wm0@eKjkpenO"
    "8be6b224edd1e0c938bda4c16c3434a7" = "Gen:Heur.PonyStealer.Wm0@eWeZHspO"
    "83aa1872d5abe2b9081119a593f54142" = "Gen:Heur.PonyStealer.Wm0@eGIRpBoO"
    "b47e1598e4293b132273aea52ab06485" = "Gen:Heur.PonyStealer.Wm0@eetw6ofO"
    "7df1757a9c3cc8f9a94a41457dfc1635" = "Gen:Heur.PonyStealer.Wm0@emf8SyeO"
    "297527bea27d2fdd18cfd7bcaa34467a" = "Gen:Heur.PonyStealer.Wm0@e8GbF6nO"
    "0c725cb728834cf1a3cc041f09d1975a" = "Gen:Heur.PonyStealer.Cm1@eG4dSnoi"
    "dde72ae232dc63298465861482d7bb93" = "Trojan/Script.Agent"
    "f7f866371543363a694b8a6f0c5e2c13" = "Trojan.Delf.FareIt.Gen.eHW@cWcS33oi"
    "74622fbc3aae349b7771709444183314" = "IL:Trojan.MSILZilla.17106"
    "7fcbff331b40e7edcd4985a65a9ab621" = "Trojan.BRMon.Gen.1"
    "1517814c4d44cc632abb52d2d6307f15" = "Dropped:Trojan.Dropper.Agent.VOE"
    "b2af3b332d92fc09b79c4bf85263fd22" = "Trojan.Dropper.Agent.VOE"
    "8688979a7854b48540cfba1ee1ae814a" = "W32.HasticosLTC.Trojan"
    "b315c590c3ad691604597ea41f8dd84e" = "Gen:Variant.Application.Downloader.Nezchi.1"
    "0d1aa70e5feb4825dd65af71d830fcd2" = "Gen:Variant.Application.Downloader.Nezchi.1"
    "2a31d25952754a23c79bd127be09c74e" = "Gen:Heur.PonyStealer.Dm1@eij2dnbi"
    "2337089f5225107923bd963581f8ab1e" = "Trojan.Brsecmon.1"
    "a072d61498279470efd1508d31ffab8b" = "Worm.Win32.Phorpiex"
    "78c9e98f51994a7af369db9a9ed6cdf9" = "Gen:Heur.Mint.Zitirez.Yu1@bi1deIicO"
    "1cd13c94f70a672f8dc30be37ba93232" = "Trojan.Generic.22761614"
    "6b645fbf570f4d09f059d8fed734fa3e" = "Trojan.PWS.ZIY"
    "3880eeb1c736d853eb13b44898b718ab" = "Trojan.BAT.AAGK"
    "a7252f5fb605f7bc63b55d69bef1a2ec" = "Backdoor/Poison.gaf"
    "c953aec897f1f624f4a0ea010e929442" = "Malicious"
    "c1736b814389cb6602329186c8181b35" = "Trojan.RansomKD.12238067"
    "7714fccf2d8f60a76f2f77ba55666437" = "Trojan.GenericKD.42067879"
    "bbf8f7e57a66bd16a2809e035f6b9918" = "Trojan.GenericKD.3562971"
    "c22908fe460312d76b50129aa3ef2cf2" = "Generic.Dacic.1.BitCoinMiner.A.3138E7A5"
    "08b6c44e03bf6648a09c80dd73655e18" = "Trojan.GenericKD.31297453"
    "6894aaded7ee80fe8c5219516d00b31f" = "Exploit.CVE-2010-2568.Gen"
    "5efd382c6d4dc1a40350c35f305f26ca" = "Exploit.CVE-2010-2568.Gen"
    "79a93cd528ed781c8abe4fab7ac5b73e" = "Gen:Variant.Razy.238695"
    "a8576fa76a7b5cb76620436000bfa3aa" = "Exploit.CVE-2010-2568.Gen"
    "85dd38fd6fed65b649ea17bc745c1beb" = "Exploit.CVE-2010-2568.Gen"
    "518381ef94ef92c159998dbbe5a598bd" = "Exploit.CVE-2010-2568.Gen"
    "4bd7bddcc67816e436b38061445c1c61" = "Trojan.Agent.CRCW"
    "97e9c748b1dc0af35038bb821306f2a3" = "Gen:Variant.Zusy.335855"
    "5693ba4532491db73bc63882c0030431" = "Exploit.CVE-2010-2568.Gen"
    "37edf73ce2e3ea5f59644c457deaf1bd" = "Exploit.CVE-2010-2568.Gen"
    "16ea7a2144e345ff3672977a4fb34987" = "Exploit.CVE-2010-2568.Gen"
    "198b21d41a4406d33aee2fc4b5ec63e2" = "Exploit.CVE-2010-2568.Gen"
    "462391b94fb3e5ab67a27c9b08860a76" = "Gen:Variant.Ursu.4826"
    "25371e6920e3b4c01965027270c41095" = "Trojan.ShadowBrokers.B"
    "2334bb8baf5e062683d8ec67b7ac531e" = "Trojan.AgentWDCR.PZW"
    "764f62436e973e7855356a1e64c3fae5" = "Exploit.CVE-2010-2568.Gen"
    "497080fed2000e8b49ee2e97e54036b1" = "Win32.Backdoor.ZBZ"
    "ff5d147f73d448e3dafab5ccdf42e7a9" = "Exploit.CVE-2010-2568.Gen"
    "22bb1452ca9bc4b8d346368d3f4db6c2" = "Gen:Variant.Razy.597037"
    "c1bb4b9b05ae93ee319eb9a6001ef5fd" = "Gen:Variant.Ursu.4793"
    "8ebaffddd3bfdc7f2b265a6604800613" = "Exploit.CVE-2010-2568.Gen"
    "e9d4cfae3c56b40cf5758743778307c6" = "Exploit.CVE-2010-2568.Gen"
    "d5abe77c071d7d0cae859e9a9247256d" = "Gen:Variant.Bulz.175858"
    "9e61781a23a323b787416e39b72b7a85" = "Exploit.CVE-2010-2568.Gen"
    "e4ff1ef997a3a1419f22938f83c91e45" = "Backdoor.DoublePulsar.B"
    "6f66a335570b54739990afe1b3f7abd2" = "Win.Exploit.ChinaChopper-1-7122825-1"
    "e27fdb6477d3919c253435f27c9f8627" = "Exploit.CVE-2010-2568.Gen"
    "9262e8951d00dd0c682f9acdf8ffd2ee" = "Exploit.CVE-2010-2568.Gen"
    "b14d6f788920c6a554ff70b0a1be95a5" = "Exploit.CVE-2010-2568.Gen"
    "d27bf068b2968fb2b5d6975fcaa91390" = "Exploit.CVE-2010-2568.Gen"
    "5abc7b9ba21c2c88b95eb9a931ea6954" = "Gen:Variant.Ursu.4860"
    "ff27f3942a805a0ef80b27c4526f0829" = "Exploit.CVE-2010-2568.Gen"
    "e2bc32f7a176cf353a195e416c1505ad" = "Gen:Variant.Bulz.760453"
    "20425a46458966175f88581b819c35ac" = "Trojan.GenericKD.32804843"
    "b350d7fcc319aad19c5b1f0d05755d80" = "Exploit.CVE-2010-2568.Gen"
    "8ca1464a51a29d015663dc3e791c3a83" = "Exploit.CVE-2010-2568.Gen"
    "09d45ae26830115fd8d9cdc2aa640ca5" = "Backdoor.XJD"
    "0f79efe75cbfec70059a90a09762beba" = "Gen:Variant.Ursu.4788"
    "c7f79e5067e76121c322acee9b611291" = "Gen:Variant.Razy.742526"

}

$databases = @{
    "1364830x00000000014700000.dmp" = "Trojan.U.GuLoader.bot"
    }


$whitelist = @(
    "1eb81856eb4c32a01706c5060010ac8f", # SodaPDFDesktop14.exe
    "732a0f9adfb6378f2cfaa8c708e1c662"

)

function Get-FormattedSize($sizeInBytes) {
    $sizeInGB = $sizeInBytes / 1GB
    $sizeInMB = $sizeInBytes / 1MB
    $sizeInKB = $sizeInBytes / 1KB

    if ($sizeInGB -ge 1) {
        return "{0:N2} GB" -f $sizeInGB
    }
    elseif ($sizeInMB -ge 1) {
        return "{0:N2} MB" -f $sizeInMB
    }
    elseif ($sizeInKB -ge 1) {
        return "{0:N2} KB" -f $sizeInKB
    }
    else {
        return "{0:N2} Bytes" -f $sizeInBytes
    }
}

function Set-WindowTitle($title) {
    $host.UI.RawUI.WindowTitle = $title
}

function Get-FileMD5Hash($filePath) {
    $hasher = [System.Security.Cryptography.MD5]::Create()
    $fileBytes = [System.IO.File]::ReadAllBytes($filePath)
    $hashBytes = $hasher.ComputeHash($fileBytes)

    $hash = [System.BitConverter]::ToString($hashBytes).Replace('-', '')
    return $hash
}

function IsMicrosoftSigned($filePath) {
#     $cert = Get-AuthenticodeSignature -FilePath $filePath -ErrorAction SilentlyContinue
#     $trustedSigners = @(
#         "Microsoft Corporation",
#         "AVG Technologies USA, LLC",
#        "Avast Software s.r.o.",
#	"C2RService",
#	"Tim Kosse"
#    )
#
#    if ($cert) {
#        foreach ($trustedSigner in $trustedSigners) {
#            if ($cert.SignerCertificate.Issuer -like "*$trustedSigner*") {
#                return $true
#            }
#        }
#    }
#    return $false
}

 function Scan-Directory($path) {

    $flaggedFiles = @()  # Store flagged files

    $files = Get-ChildItem -Path $path -File -ErrorAction SilentlyContinue

    foreach ($file in $files) {

        $filePath = $file.FullName
        $fileSize = Get-FormattedSize -sizeInBytes $file.Length
        $formattedSize = Get-FormattedSize -sizeInBytes $fileSize
        $title = "Scanning $filePath - Size: ${fileSize}"
        Set-WindowTitle -title $title

        # Check file content for specific strings
        $stringsToCheck = @{
            'http://kukutrustnet888.info/home.gif' = 'Win32/Kashu.E'
	    'http://kukutrustnet987.info/home.gif' = 'Malware:Win32/km_2a8b727.None'
	    'http://kukutrustnet777.info/home.gif' = 'Trojan.SalityStub.F'

        }


        $fileContent = Get-Content -Path $filePath -Raw


        $detected = $false


        foreach ($string in $stringsToCheck.Keys) {
            if ($fileContent -like "*$string*") {
                $detection = $stringsToCheck[$string]
                if ($flaggedFiles -notcontains "$filePath - $detection") {
                    $flaggedFiles += "$filePath - $detection"
                    Write-Output "Behavior shield: $filePath - $detection"
                    $detected = $true
		    # Set the path to the sound file
		    $soundFilePath = "C:\Windows\Media\notify.wav"
		    # Create a SoundPlayer object
		    $soundPlayer = New-Object System.Media.SoundPlayer
		    $soundPlayer.SoundLocation = $soundFilePath
		    # Play the sound
		    $soundPlayer.Play()
		    $detectionAmount += 1
                }
            }
        }


        if (-not $flagged) {
            # Write-Output "File not flagged: $filePath"
        }

        $hash = Get-FileMD5Hash -filePath $filePath
        if ($whitelist -contains $hash) {
            # Write-Output "Whitelisted hash found! File: $filePath, MD5 Hash: $hash"
	    $trusted += 1
            continue
        }

        if ($hashes.ContainsKey($hash)) {
            Write-Output "File: $filePath, MD5: $hash, $($hashes[$hash])"
        }

        foreach ($database in $databases.Keys) {
            if ($file.Name -like "*$database*") {
                Write-Output "$database! File: $filePath, Result: $($databases[$database])"
            }
        }

    }


    $directories = Get-ChildItem -Path $path -Directory -ErrorAction SilentlyContinue
    foreach ($directory in $directories) {
        $directoryPath = $directory.FullName
        if ($excludedFolders -contains $directoryPath) {
            continue
        }
        Scan-Directory -path $directoryPath
    }

}
    

cls

echo "Please read and review the following terms of conditions and license agreement listed below:

Terms:
a) Commercial use: Please follow per the condition that most versions of this product come as not allowed for commercial use, but some versions do.

b) Commercial use, extended: Selling of this product in any way is not allowed per the fact that the original product is free but may be packaged in premium versions, which are still subject to this section of the license agreement.

c) Third-party site use: Copies of old, outdated, or any versions in any or all third-party sites is strictly prohibited by this license agreement. Third-party copies of this product should be reported to the owner and producer of this product.

d) Third-party site use, extended: Furthermore, modified versions of this product are also not allowed on third-party sites per this license agreement. Branded repackaging of this product is also strictly prohibited and may be reported to the author and producer of this product, which may result in serious penalties.

e) Signature use: In order for other companies to use signatures from this product, those companies must have obtained explicit permission from the producer and author of this product.

f) Signature use, extended: This process will involve contacting the author and producer of the product and will require credits to the author and producer in order for the company to be accepted and allowed to use this product's malware signatures.

g) Credits and acknowledgements: This product uses many signature names of several antiviruses, but not signature contents. This retains the ownership of these signatures by the author and producer of this product.

Press the enter key if you agree to the terms of service. Press the X button on this program to close it if you do not agree to the terms of service."

pause

cls

Write-Output ""
Write-Output "
Version information:
SOS Version: v1.0
Commercial use allowed: No
Premium version: Yes

Signature information:
FN Signatures: 125
Hash Signatures: 124
Generic signatures: 114
Whitelisted hashes: 39"

echo

echo "Scanning external drives..."
Scan-Directory -path "Q:\"
Scan-Directory -path "W:\"
Scan-Directory -path "E:\"
Scan-Directory -path "R:\"
Scan-Directory -path "T:\"
Scan-Directory -path "Y:\"
Scan-Directory -path "U:\"
Scan-Directory -path "I:\"
Scan-Directory -path "O:\"
Scan-Directory -path "P:\"
Scan-Directory -path "A:\"
Scan-Directory -path "S:\"
Scan-Directory -path "D:\"
Scan-Directory -path "F:\"
Scan-Directory -path "G:\"
Scan-Directory -path "H:\"
Scan-Directory -path "J:\"
Scan-Directory -path "K:\"
Scan-Directory -path "L:\"
Scan-Directory -path "Z:\"
Scan-Directory -path "X:\"
Scan-Directory -path "V:\"
Scan-Directory -path "B:\"
Scan-Directory -path "N:\"
Scan-Directory -path "M:\"
echo "Scanning file system..."
Scan-Directory -path "C:\"
Write-Output ""
Write-Output "
Total detections: $detectionAmount
"

Set-WindowTitle -title "PowerShell"
